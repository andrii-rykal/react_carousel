{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","lengthMove","setLengthMove","images","step","frameSize","itemWidth","animationDuration","infinite","moveSlider","event","currentButton","target","buttonNext","document","querySelector","buttonPrev","totalWidth","length","totalFrameSize","totalStep","HTMLElement","dataset","cy","Math","abs","disabled","className","style","width","transform","transition","map","image","index","src","alt","height","type","onClick","Form","members","pace","frame","size","speed","enteredStep","enteredFrame","enteredSize","enteredSpeed","setInfinite","onChangeValue","enteredFunction","currentValue","startValue","value","dispSize","dispFrame","position","getAttribute","min","max","onChange","name","App","useState","move","setMove","stepSize","setStepSize","frameVisible","setFrameVisible","itemSize","setItemSize","speedValue","setSpeedValue","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dd3b6c33.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  lengthMove: number;\n  setLengthMove: (lengthMove: number) => void;\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nexport const Carousel: React.FC<Props> = ({\n  lengthMove,\n  setLengthMove,\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const moveSlider = (event: React.MouseEvent<HTMLElement>) => {\n    const currentButton = event.target;\n    const buttonNext = document\n      .querySelector<HTMLButtonElement>('[data-cy=next]');\n    const buttonPrev = document\n      .querySelector<HTMLButtonElement>('[data-cy=prev]');\n    const totalWidth = images.length * itemWidth;\n    const totalFrameSize = frameSize * itemWidth;\n    const totalStep = step * itemWidth;\n\n    if (currentButton instanceof HTMLElement\n      && buttonNext instanceof HTMLElement\n      && buttonPrev instanceof HTMLElement) {\n      switch (currentButton.dataset.cy) {\n        case 'next':\n\n          if (infinite\n            && Math.abs(lengthMove) === totalWidth - totalFrameSize) {\n            setLengthMove(0);\n            break;\n          } else if (!infinite\n            && Math.abs(lengthMove) === totalWidth - totalFrameSize) {\n            buttonNext.disabled = true;\n            break;\n          }\n\n          setLengthMove(lengthMove - totalStep);\n\n          if (Math.abs(lengthMove) > totalWidth - totalFrameSize * 2) {\n            setLengthMove(-1 * (totalWidth - totalFrameSize));\n            buttonPrev.disabled = false;\n          } else {\n            buttonPrev.disabled = false;\n          }\n\n          break;\n\n        case 'prev':\n          if (infinite && lengthMove === 0) {\n            setLengthMove(-1 * (totalWidth - totalFrameSize));\n            break;\n          } else if (!infinite && lengthMove === 0) {\n            buttonPrev.disabled = true;\n            break;\n          }\n\n          setLengthMove(lengthMove + totalStep);\n\n          if ((lengthMove + totalFrameSize) > 0) {\n            setLengthMove(0);\n            buttonNext.disabled = false;\n          } else {\n            buttonNext.disabled = false;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${images.length * itemWidth}px`,\n      }}\n    >\n\n      <div\n        className=\"container\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${lengthMove}px)`,\n            transition: `all ${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`${index + 1}`}\n                style={{\n                  width: `${itemWidth}px`,\n                  height: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            data-cy=\"prev\"\n            onClick={moveSlider}\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={moveSlider}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Form.scss';\n\ntype Props = {\n  members: number;\n  lengthMove: number;\n  pace: number;\n  frame: number;\n  size: number;\n  speed: number;\n  infinite: boolean;\n  setLengthMove: (lengthMove: number) => void;\n  enteredStep: (pace: number) => void;\n  enteredFrame: (frame: number) => void;\n  enteredSize: (size: number) => void;\n  enteredSpeed: (speed: number) => void;\n  setInfinite: (infinite: boolean) => void;\n};\n\nexport const Form: React.FC<Props> = ({\n  members,\n  lengthMove,\n  pace,\n  frame,\n  size,\n  speed,\n  infinite,\n  setLengthMove,\n  enteredStep,\n  enteredFrame,\n  enteredSize,\n  enteredSpeed,\n  setInfinite,\n}) => {\n  const onChangeValue = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    enteredFunction: (value: number) => void,\n    currentValue: number,\n    startValue: number,\n  ) => {\n    const buttonNext = document\n      .querySelector<HTMLButtonElement>('[data-cy=next]');\n    const buttonPrev = document\n      .querySelector<HTMLButtonElement>('[data-cy=prev]');\n\n    if (+event.target.value && +event.target.value !== currentValue) {\n      enteredFunction(+event.target.value);\n    } else {\n      enteredFunction(startValue);\n    }\n\n    const dispSize = (lengthMove / currentValue) * +event.target.value;\n    const dispFrame = (members - +event.target.value) * size * -1;\n    const position = (-1 * lengthMove) + (size * frame);\n\n    switch (event.target.getAttribute('name')) {\n      case 'size':\n        setLengthMove(dispSize);\n        break;\n\n      case 'frame':\n        if (position === members * size) {\n          setLengthMove(dispFrame);\n        }\n\n        if (frame + 1 !== members\n          && buttonNext instanceof HTMLElement\n          && buttonPrev instanceof HTMLElement) {\n          buttonPrev.disabled = false;\n          buttonNext.disabled = false;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form className=\"form\">\n      <label>\n        Step:\n        <input\n          type=\"number\"\n          value={pace}\n          min={1}\n          max={members}\n          onChange={(event) => onChangeValue(event, enteredStep, pace, 3)}\n        />\n      </label>\n      <label>\n        Frame:\n        <input\n          type=\"number\"\n          name=\"frame\"\n          value={frame}\n          min={1}\n          max={members}\n          onChange={(event) => onChangeValue(event, enteredFrame, frame, 3)}\n        />\n      </label>\n      <label>\n        Size:\n        <input\n          type=\"number\"\n          name=\"size\"\n          value={size}\n          min={50}\n          max={300}\n          onChange={(event) => onChangeValue(event, enteredSize, size, 130)}\n        />\n      </label>\n      <label>\n        Speed:\n        <input\n          type=\"number\"\n          value={speed}\n          min={0}\n          max={5000}\n          onChange={(event) => onChangeValue(event, enteredSpeed, speed, 1000)}\n        />\n      </label>\n      <label>\n        Infinite:\n        <input\n          type=\"checkbox\"\n          onChange={() => {\n            setInfinite(!infinite);\n          }}\n        />\n      </label>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Form } from './components/Form';\n\nconst images: string[] = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nexport const App: React.FC = () => {\n  const [move, setMove] = useState(0);\n  const [stepSize, setStepSize] = useState(3);\n  const [frameVisible, setFrameVisible] = useState(3);\n  const [itemSize, setItemSize] = useState(130);\n  const [speedValue, setSpeedValue] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <Form\n        members={images.length}\n        lengthMove={move}\n        pace={stepSize}\n        frame={frameVisible}\n        size={itemSize}\n        speed={speedValue}\n        infinite={infinite}\n        setLengthMove={setMove}\n        enteredStep={setStepSize}\n        enteredFrame={setFrameVisible}\n        enteredSize={setItemSize}\n        enteredSpeed={setSpeedValue}\n        setInfinite={setInfinite}\n      />\n\n      <Carousel\n        images={images}\n        lengthMove={move}\n        setLengthMove={setMove}\n        step={stepSize}\n        frameSize={frameVisible}\n        itemWidth={itemSize}\n        animationDuration={speedValue}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}